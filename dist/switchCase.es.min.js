/**
 * rubico v1.9.7
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2021 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isPromise=n=>null!=n&&"function"==typeof n.then,thunkConditional=(n,t,r)=>n?t():r(),thunkifyArgs=(n,t)=>function(){return n(...t)},thunkify3=(n,t,r,o)=>function(){return n(t,r,o)},__=Symbol.for("placeholder"),curry3ResolveArg0=(n,t,r)=>function(o){return n(o,t,r)},curry3ResolveArg1=(n,t,r)=>function(o){return n(t,o,r)},curry3ResolveArg2=(n,t,r)=>function(o){return n(t,r,o)},curry3=function(n,t,r,o){return t==__?curry3ResolveArg0(n,r,o):r==__?curry3ResolveArg1(n,t,o):curry3ResolveArg2(n,t,r)},always=n=>function(){return n},arrayConditional=function(n,t,r){const o=n.length-1;for(;(r+=2)<o;){const o=n[r],u=n[r+1],i="function"==typeof o?o(...t):o;if(isPromise(i))return i.then(curry3(thunkConditional,__,"function"==typeof u?thunkifyArgs(u,t):always(u),thunkify3(arrayConditional,n,t,r)));if(i)return"function"==typeof u?u(...t):u}if(r==n.length)return;const u=n[o];return"function"==typeof u?u(...t):u},areAllValuesNonfunctions=function(n){const t=n.length;let r=-1;for(;++r<t;)if("function"==typeof n[r])return!1;return!0},thunkify2=(n,t,r)=>function(){return n(t,r)},nonfunctionsConditional=function(n,t){const r=n.length,o=r-1;for(;(t+=2)<o;){const r=n[t],o=n[t+1];if(isPromise(r))return r.then(curry3(thunkConditional,__,always(o),thunkify2(nonfunctionsConditional,n,t)));if(r)return o}if(t!=r)return n[t]},switchCase=n=>areAllValuesNonfunctions(n)?nonfunctionsConditional(n,-2):function(...t){return arrayConditional(n,t,-2)};export default switchCase;
